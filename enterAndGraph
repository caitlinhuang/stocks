import matplotlib
import quandl
import numpy as np
from matplotlib.backends.backend_tkagg import FigureCanvasTkAgg
from matplotlib.figure import Figure
import pandas as pd
import sys
if sys.version_info[0] < 3:
    import Tkinter as tk
else:
    import tkinter as tk
import tkinter.ttk

def getStockInfo(ticker, date):
    auth_tok = "c2V_sVydLtbotC8xN8sH"
    prices = quandl.get(ticker, trim_start = "1980-01-01", trim_end = date, authtoken=auth_tok)
    prices = prices[['Adj. Close']]
    return prices
    
def init(data):
    data.mode = "start"

def displayUserEntries():
    return ("Stock Symbol: %s\nDate: %s" % (stockSym.get(), date.get())

def startRedrawAll(canvas, data, root):
    Label(root, text = "Stock Symbol: ").grid(row = 0)
    Label(root, text = "Date: ").grid(row = 1)
    stockSym = Entry(root)
    date = Entry(root)
    stockSym.grid(row = 0, column = 1)
    date.grid(row = 1, column = 1)

def redrawAll(canvas, data, root):
    if data.mode == "start":
        startRedrawAll(canvas, data, root)

def mousePressed(canvas, data):
    pass

def keyPressed(canvas, data):
    if data.mode == "start" and stockSym.get() != "" and date.get() != "":
        data.mode = "summary"

#from 15112 website and 
def run(width = 600, height = 600):
    def redrawAllWrapper(canvas, data):
        canvas.delete(ALL)
        canvas.create_rectangle(0, 0, data.width, data.height,
        fill='white', width=0)
        redrawAll(canvas, data)
        canvas.update()    

    def mousePressedWrapper(event, canvas, data):
        mousePressed(event, data)
        redrawAllWrapper(canvas, data)

    def keyPressedWrapper(event, canvas, data):
        keyPressed(event, data)
        redrawAllWrapper(canvas, data)
    
    class Struct(object): pass
    data = Struct()
    data.width = width
    data.height = height
    root = tk.Tk()
    root.resizable(width=False, height=False) # prevents resizing window
    init(data, root)
    lf = tkinter.ttk.Labelframe(root, text='Stock Price')
    lf.grid(row=0, column=0, sticky='nwes', padx=3, pady=3)
    t = np.arange(0.0,3.0,0.01)
    df = getStockInfo("WIKI/AAPL", "2018-12-30")
    fig = Figure(figsize=(16,6), dpi=100)
    ax = fig.add_subplot(111)
    df.plot(ax=ax)
    canvas = FigureCanvasTkAgg(fig, master=lf)
    canvas.draw()
    canvas.get_tk_widget().grid(row=0, column=0)
    root.bind("<Button-1>", lambda event:
                            mousePressedWrapper(event, canvas, data))
    root.bind("<Key>", lambda event:
                            keyPressedWrapper(event, canvas, data))
    redrawAll(canvas, data)
    root.mainloop()
run()
